#+title:Manjaro Linux 日常记录
#+data:<2021-11-03 Wed>
#+LANGUAGE: zh-CN
#+html_head: <link rel="stylesheet" type="text/css" href="./css/worg.css"/>

* 一些命令
** screenfetch命令
显示manjaro的详细系统信息
* 更新国内源
** 测试国内镜像源，测试完之后会在一个指定的文件中生成镜像列表
#+begin_quote
sudo pacman-mirrors -i -c China -m rank
#+end_quote
** 设置archlinuxcn源
#+begin_quote
sudo nano /etc/pacman.conf
##在文件末尾添加以下内容
[archlinuxcn]
SigLevel = Optional TrustedOnly
Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch
#+end_quote
** 更新源列表
#+begin_quote
sudo pacman-mirrors -g
#+end_quote
** 更新pacman数据库并全面更新系统
#+begin_quote
sudo pacman -Syyu
#+end_quote
* 配置中文输入法（fcitx-5 rime）
** 安装fcitx5（输入法框架）
  #+begin_quote
   yay -S fcitx5-im
  #+end_quote
** 配置fcitx5的环境变量(~/.pam_environment)
- 建立配置文件
#+begin_quote
emacs ~/.pam_environment
#+end_quote

- 文件内容
#+begin_quote
GTK_IM_MODULE DEFAULT=fcitx
QT_IM_MODULE  DEFAULT=fcitx
XMODIFIERS    DEFAULT=\@im=fcitx
SDL_IM_MODULE DEFAULT=fcitx
#+end_quote

** 安装rime（输入法引擎）
#+begin_quote
yay -S fcitx5-rime
#+end_quote

** 安装输入方案（rime-cloverpinyin）
#+begin_quote
yay -S rime-cloverpinyin
#+end_quote

** 安装中文维基字库
#+begin_quote
yay -S fcitx5-pinyin-zhwiki-rime
#+end_quote

* pacman命令详解
** 简介
Pacman 是一个软件包管理器，作为ArchLinux发行版的一部分。简单来说，就是和apt-get之于Ubuntu一样，pacman就是Arch的apt-get。要想轻松玩转Arch，学会pacman是必需的。

Pacman包管理器是ArchLinux的一大亮点。它汲取了其他Linux版本软件管理的优点，譬如Debian的APT机制、Redhat的 Yum机制、 Suse的Yast等，对于安装软件提供了无与伦比的方便。另外由于ArchLinux是一个针对i686架构优化的发行版，因此对于软件的效率提高也有一定的帮助。pacman可以说是ArchLinux的基础，因为ArchLinux默认安装非常少的软件，其他软件都是使用pacman通过网络来安装的。它将一个简单的二进制包格式和易用的构建系统结合了起来。Pacman使得简单的管理与自定义软件包成为了可能，而不论他们来自于官方的Arch软件库或是用户自己创建的。Pacman可以通过和主服务器同步包列表来进行系统更新，这使得注重安全的系统管理员的维护工作成为轻而易举的事情。

要完全了解pacman可以做什么，请阅读man pacman。以下只是一些pacman的简单
操作实例。

** 安装软件包
- 安装或者升级单个软件包，或者一列软件包（包含依赖包），使用如下命令：
#+begin_quote
pacman -S package_name1 package_name2
 #+end_quote

- 有时候在不同的软件仓库中，一个软件包有多个版本（比如extra和testing）。
  你可以选择一个来安装：
#+begin_quote
pacman -S extra/package_name
pacman -S testing/package_name
#+end_quote

** 删除软件包
- 删除单个软件包，保留其全部已经安装的依赖关系
#+begin_quote
pacman -R package_name
#+end_quote

- 删除指定软件包，及其所有没有被其他已安装软件包使用的依赖关系：
#+begin_quote
pacman -Rs package_name
#+end_quote

- 缺省的，pacman会备份被删除程序的配置文件，将它们加上*.pacsave扩展名。如果你在删除软件包时要同时删除相应的配置文件（这种行为在基于Debian的系统中称为清除purging），你可是使用命令：
#+begin_quote
pacman -Rn package_name
#+end_quote

- 当然，它也可以加上-s参数来删除当前无用的依赖。这样的话，真正删除一个软
  件包、它的配置文件以及所有不再需要的依赖的命令如下：
#+begin_quote
pacman -Rsn package_name
#+end_quote

** 升级系统
- Pacman能够只用一个指令来升级系统中所有已安装的包。升级的时间取决于你的系统有多新。
#+begin_quote
pacman -Su
#+end_quote

- 当然，最好做法的是将升级系统和同步仓库数据合成为一条指令：
#+begin_quote
pacman -Syu
#+end_quote

** 查询包数据库
- Pacman可以在包数据库中查询软件包，查询位置包含了包的名字和描述：
#+begin_quote
pacman -Ss package
#+end_quote

- 要查询已安装的软件包：
#+begin_quote
pacman -Qs package
#+end_quote

- 一旦你得到了软件包的完整名字，你可以获取关于它的更为详尽的信息：
#+begin_quote
pacman -Si package
pacman -Qi package
#+end_quote

- 要获取已安装软件包所包含文件的列表：
#+begin_quote
pacman -Ql package
#+end_quote

- 你也可以通过查询数据库获知目前你的文件系统中某个文件是属于哪个软件包。
#+begin_quote
pacman -Qo /path/to/a/file
#+end_quote

- 要罗列所有不再作为依赖的软件包(孤立orphans)：
#+begin_quote
pacman -Qdt
#+end_quote

- Pacman使用-Q参数来查询本地软件包数据库。参见：
#+begin_quote
pacman -Q –help
#+end_quote

- …而使用-S参数来查询远程同步的数据库。参见：
#+begin_quote
pacman -S –help
#+end_quote
