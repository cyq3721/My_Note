#+title: emacs学习笔记
#+author: CHEN
#+: 2017-7-20

* Setup安装
* Package Manage 包管理器
 - m-x packagej-list-packages
 - use-package
* config配置
 - 个人喜好 ： ~/.emacs.d/init.el -(org-babel)-> ~/.emacs.d/config.org
 - 配置文件下载 ：
   - [[https://crackwallsports.github.io/testwebsite/articles/Emacs/init.el][init.el]]
   - [[https://crackwallsports.github.io/testwebsite/articles/Emacs/config.org][config.org]]
* Basic基础
** UI用户界面
  - Menu菜单栏：屏幕顶部突出 显示的条
  - Frame 框架
    + Window窗口
      - Buffer缓冲区：关联文件
  - Mode Line 模式行（状态栏）：每个窗口中横贯底部的高两条，提供当前缓冲区的信息
  - Echo Area：模式行下面底部的区域显示相关信息
  - Mode Line
     + [[https://github.com/Malabarba/smart-mode-line][smart-mode-line]]
** Mode 模式
  - 主要模式 major-mode：  主要的编辑行为 仅用于当前缓冲区 仅有一个活动的主模式
  - 次要模式 minor-mode： 提供了一些与任何特定的主要模式无关的特性或功能 可多个
* emacs 的配置
** 配置文件
emacs的配置文件在 ~/.emacs中进行配置，重启emacs是配置生效，或者在打开~/.emacs的时候执行命令
m-x eval-buffer，可以是配置立即生效。
** 配置插件
在配置文件中输入代码：
#+begin_quote
(add-to-list 'load-path' ~/.emacs.d/lisp")
(require 'pluginname')
#+end_quote
* use-package使用说明
** 简介
use-package 宏是 spacemacs 的精髓，实现了 package 配置的隔离，终于不用将所有的配置放在一起，乱得像一锅粥了，延迟加载极大地提升了 spacemacs 的启动性能。
** 基本用法
#+begin_src elisp
  (use-package foo)
#+end_src
*** init：
:init 关键字在 package 加载之前，执行后续 sexp 代码（用于初始化工作）
#+begin_src elisp
  (use-package foo
  :init
  (setq foo-variable t))
#+end_src
*** :config
:config 关键字在 package 家在之后执行（由于 defer 的存在，:config 总是在 autoload 执行后执行）
#+begin_src elisp
  (use-package foo
  :init
  (setq foo-variable t)
  :config
  (foo-mode 1))
#+end_src
*** :init 和:config 一起使用的例子
#+begin_src elisp
  (use-package color-moccur
  :commands (isearch-moccur isearch-all)
  :bind ("M-s O" . moccur)
  :init
  (bind-key "M-o" 'isearch-moccur isearch-mode-map)
  (bind-key "M-O" 'isearch-moccur-all isearch-mode-map)
  :config
  (use-package moccur-edit))
#+end_src
*** :bind (键绑定)
:bind 会在 ace-jump-mode 加载后执行绑定，你可以用 M-x describe-personal-keybindings 查看你通过.emacs 设置的键绑定。
#+begin_src elisp
  (use-package ace-jump-mode
  :bind ("C-." . ace-jump-mode))
#+end_src

#+begin_src elisp
  (use-package hi-lock
  :bind (("M-o l" . highlight-lines-matching-regexp)
         ("M-o r" . highlight-regexp)
         ("M-o w" . highlight-phrase)))
#+end_src
*** :commands
:commands 关键字使得命令在用到时才被加载，而:init 无论 ace-jump-mode 是否成功加载，均会执行。
#+begin_src elisp
  (use-package ace-jump-mode
  :commands ace-jump-mode
  :init
  (bind-key "C-." 'ace-jump-mode))
#+end_src
